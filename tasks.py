from invoke import task
from pathlib import Path
from minchin.text import subtitle, title

REQUIREMENT_FILES = [
    "build",
    "dev",
]

ALL_REQUIREMENT_FILE = "all"

REQUIREMENTS_PATH = [
    ".requirements",
]

@task
def update(ctx):
    """
    Update python requirements files to latest versions.

    Also, rebuilds "all.in" requirement file.
    """
    title("Update python requirements files to latest versions")

    base_path = Path(".")
    for folder in REQUIREMENTS_PATH:
        base_path = base_path / folder
    print(f'** base path: "{base_path}"')

    all_requirements = base_path.resolve() / f"{ALL_REQUIREMENT_FILE}.in"
    # make sure file already exists
    all_requirements.touch()
    all_requirements.write_text(
        "# ** This file is automatically generated. **\n"
        "# Do not edit by hand\n"
        "\n"
    )
    with all_requirements.open("a") as all_requirements_file:
        for requirement in REQUIREMENT_FILES:
            print()
            subtitle(f"** {requirement} **")
            print()
            ctx.run(f"pip-compile {base_path / requirement}.in")
            print(f"-r {requirement}.in", file=all_requirements_file)

    print()
    subtitle(f"** {all_requirements} **")
    print()
    ctx.run(f"pip-compile {base_path / ALL_REQUIREMENT_FILE}.in")

@task
def upgrade(ctx, requirement_file="all"):
    """
    Upgrade python requirements to version specified in requirements files.
    """

    title("Upgrade python requirements to version specified in requirements files")

    base_path = Path(".")
    for folder in REQUIREMENTS_PATH:
        base_path = base_path / folder
    requirement_file = base_path / f"{requirement_file}.txt"
    print(f"** requirement file: {requirement_file}")

    ctx.run(f"pip-sync {requirement_file.resolve()}")
